version: '3.9'
volumes:
  database:
  redis_data:
networks:
  traefik:
    external: true
services:
  app:
    image: fronidze.app:latest
    container_name: fronidze.app
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    volumes:
      - ./.docker/php/php.ini:/usr/local/etc/php/php.ini:delegated
      - ./.docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:delegated
      - ./app:/app:delegated
  nginx:
    image: fronidze.nginx:latest
    container_name: fronidze.nginx
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
    networks:
      - traefik
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sales.rule=Host(`simapple.ru`)"
      - "traefik.http.routers.sales.entryPoints=http"
      - "traefik.http.services.sales.loadBalancer.server.port=80"
      - "traefik.http.routers.sales.middlewares=redirectToHttps"
      - "traefik.http.middlewares.redirectToHttps.redirectScheme.scheme=https"
      - "traefik.http.middlewares.redirectToHttps.redirectScheme.permanent=true"
      - "traefik.http.routers.sslSales.rule=Host(`simapple.ru`)"
      - "traefik.http.routers.sslSales.entryPoints=https"
      - "traefik.http.routers.sslSales.tls=true"
      - "traefik.http.routers.sslSales.tls.certResolver=letsEncrypt"
  database:
    image: postgres:14.4-alpine
    restart: always
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - database:/var/lib/postgresql/data:delegated
  redis:
    image: redis
    environment:
      REDIS_PASSWORD: 405968
    command: [ "redis-server", "--appendonly", "yes", "--requirepass", "405968" ]
    volumes:
      - redis_data:/data